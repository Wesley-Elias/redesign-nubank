// == == == == Layout of project == == == == //

// Container-devices
$container-xl: 1440px;
$container-l: 1140px;
$container-m: 960px;
$container-s: 540px;

@mixin responsive($device) {
   // For resolutions upper 1440px
   @if $device == xl {
      @media screen and (min-width: $container-xl) {
         @content;
      }
   } 
   
   // For resolutions between 1140px and 1440px
   @else if $device == l {
      @media screen and (max-width: $container-xl) and (min-width: $container-l) {
         @content;
      }
   } 
   
   // For resolutions between 960px and 1440px
   @else if $device == m {
      @media screen and (max-width: $container-l) and (min-width: $container-s) {
         @content;
      }
   } 
   
   // For resolutions less than 960px
   @else if $device == s {
      @media screen and (max-width: $container-m) {
         @content;
      }
   } 
   
   // For resolutions less than 540px
   @else if $device == xs {
      @media screen and (max-width: $container-s) {
         @content;
      }
   }
}

.container {
   max-width: $container-xl;
   margin: 0 auto;

   padding: 96px 24px;

   display: flex;
   justify-content: center;
   align-items: center;
   flex-direction: row;

   // overflow: hidden;

   @include responsive(s) {
      flex-direction: column;
      padding: 32px 16px;
   }
}

.flex-start {
   display: flex;
   justify-content: flex-start;
   align-items: center;
}

.flex-center {
   display: flex;
   justify-content: center;
   align-items: center;
}

.flex-column {
   flex-direction: column;
}

.relative {
   position: relative;
}

.flex-wrap {
   flex-wrap: wrap;
}

.flex-item-1 {
   flex: 1 1 360px;
}

.flex-item-2 {
   flex: 2 1 360px;
}

.flex-item-3 {
   flex: 3 1 360px;
}

.flex-item-4 {
   flex: 4 1 360px;
}

.flex-item-5 {
   flex: 5 1 360px;
}

.flex-auto {
   flex: 1 1 auto;
}

// Width's
.w-auto {
   width: auto;
}
.w-100 {
   width: 100%;
}
.w-75 {
   width: 75%;
}
.w-50 {
   width: 50%;
}
.w-25 {
   width: 25%;
}

.hidden {
   overflow: hidden;
}

// == == == == Hero == == == == //
.hero {
   height: 90vh;

   @include responsive(s) {
      height: auto;
   }
}

.bg-home {
   width: 100%;
   height: 100%;

   overflow: hidden;

   position: absolute;

   z-index: -1;
}

.svg-bg-home {
   width: 150%;
   
   @include responsive(xl) {
      width: 100%;
   }
}

// Section People
.list-item {
   position: relative;

   padding: 8px 8px 8px 72px;
   margin-bottom: 48px;

   &::after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: -8px;
      width: 64px;
      height: 64px;
   }
}

// Section best
.best {
   display: flex;
   justify-content: center;
   align-items: center;

   background-color: $white-normal;
   border-radius: 50px;

   position: relative;

   @include responsive(s) {
      flex-direction: column;
   }

   &::after {
      content: '';
      display: block;
      position: absolute;

      background-image: url("../../svg/entail.svg");
      background-repeat: no-repeat;
      top: 0;
      left: 50%;
      width: 124px;
      height: 32px;
      transform: translate(-50%, 0);
   }
}

.best-item {
   display: flex;
   flex-direction: column;
   justify-content: flex-start;
   align-items: flex-start;

   padding: 16px;
   margin: 8px 0px;

   @include responsive(s) {
      justify-content: center;
      align-items: center;
   }
}

// Section invite
.bg-invite {
   height: 100vh;

   overflow: hidden;
}

.svg-invite {
   position: absolute;
   top: 50%;
   left: 50%;
   width: 100%;
   
   transform: translate(-50%, -50%);
   z-index: -1;

   @include responsive(l) {
      transform: translate(-50%, -50%) scale(1.5);
   }
}
